apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.operatorName }}-metrics-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.operatorName }}-metrics-apiserver
    app.kubernetes.io/name: {{ .Values.operatorName }}-metrics-apiserver
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/part-of: {{ .Values.operatorName }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.operatorName }}-metrics-apiserver
  template:
    metadata:
      labels:
        app: {{ .Values.operatorName }}-metrics-apiserver
        {{- if .Values.aadPodIdentity }}
        aadpodidbinding: {{ .Values.aadPodIdentity }}
        {{- end }}
      {{- if .Values.podAnnotations.metricsAdapter }}
      annotations:
      {{- toYaml .Values.podAnnotations.metricsAdapter | nindent 8}}
      {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.operatorName }}-metrics-apiserver
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.metricsAdapter }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: WATCH_NAMESPACE
              value: ""
          args:
          - /usr/local/bin/keda-adapter
          - --secure-port=6443
          - --logtostderr=true
          - --v={{ .Values.logLevelMetrics }}
          ports:
            - containerPort: {{ .Values.service.portHttpsTarget }}
              name: https
              protocol: TCP
            - containerPort: {{ .Values.service.portHttpTarget }}
              name: http
              protocol: TCP
          {{- if .Values.grpcTLSCertsSecret }}
          volumeMounts:
          - name: grpc-certs
            mountPath: /grpccerts
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.grpcTLSCertsSecret }}
      volumes:
      - name: grpc-certs
        secret:
          secretName: {{ .Values.grpcTLSCertsSecret }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
        affinity:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
        tolerations:
          {{- toYaml . | nindent 8 }}
      {{- end }}