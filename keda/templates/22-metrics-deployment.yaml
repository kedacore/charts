apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.operator.name }}-metrics-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.operator.name }}-metrics-apiserver
    app.kubernetes.io/name: {{ .Values.operator.name }}-metrics-apiserver
    {{- include "keda.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.metricsServer.replicaCount }}
  {{- with .Values.upgradeStrategy.metricsApiServer }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.operator.name }}-metrics-apiserver
  template:
    metadata:
      labels:
        app: {{ .Values.operator.name }}-metrics-apiserver
        app.kubernetes.io/name: {{ .Values.operator.name }}-metrics-apiserver
        {{- include "keda.labels" . | indent 8 }}
        {{- if .Values.podIdentity.activeDirectory.identity }}
        aadpodidbinding: {{ .Values.podIdentity.activeDirectory.identity }}
        {{- end }}
        {{- if .Values.podLabels.metricsAdapter }}
        {{- toYaml .Values.podLabels.metricsAdapter | nindent 8}}
        {{- end }}
      annotations:
      {{- if and .Values.prometheus.metricServer.enabled ( not .Values.prometheus.metricServer.podMonitor.enabled ) }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.prometheus.metricServer.port | quote }}
        prometheus.io/path: {{ .Values.prometheus.metricServer.path }}
      {{- end }}
      {{- if .Values.podAnnotations.metricsAdapter }}
      {{- toYaml .Values.podAnnotations.metricsAdapter | nindent 8}}
      {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      automountServiceAccountToken: true
      securityContext:
        {{- if .Values.podSecurityContext.metricServer }}
        {{- toYaml .Values.podSecurityContext.metricServer | nindent 8 }}
        {{- else }}
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Values.operator.name }}-metrics-apiserver
          securityContext:
            {{- if .Values.securityContext.metricServer }}
            {{- toYaml .Values.securityContext.metricServer | nindent 12 }}
            {{- else }}
            {{- toYaml .Values.securityContext | nindent 12 }}
            {{- end }}
          image: "{{ .Values.image.metricsApiServer.repository }}:{{ .Values.image.metricsApiServer.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.portHttpsTarget }}
              scheme: HTTPS
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.service.portHttpsTarget }}
              scheme: HTTPS
            initialDelaySeconds: 5
          env:
            - name: WATCH_NAMESPACE
              value: {{ .Values.watchNamespace | quote }}
            {{- if .Values.http.timeout }}
            - name: KEDA_HTTP_DEFAULT_TIMEOUT
              value: {{ .Values.http.timeout | quote }}
            {{- end }}
            {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 -}}
            {{- end }}
          args:
          - /usr/local/bin/keda-adapter
          - --secure-port={{ .Values.service.portHttpsTarget }}
          - --logtostderr=true
          {{- if .Values.prometheus.metricServer.enabled }}
          - --metrics-port={{ .Values.prometheus.metricServer.port }}
          - --metrics-path={{ .Values.prometheus.metricServer.path }}
          {{- end }}
          - --v={{ .Values.logging.metricServer.level }}
          {{- range $key, $value := .Values.extraArgs.metricsAdapter }}
          - --{{ $key }}={{ $value }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.service.portHttpsTarget }}
              name: https
              protocol: TCP
            - containerPort: {{ .Values.service.portHttpTarget }}
              name: http
              protocol: TCP
            {{- if .Values.prometheus.metricServer.enabled }}
            - containerPort: {{ .Values.prometheus.metricServer.port }}
              name: metrics
              protocol: TCP
            {{- end }}
          volumeMounts:
          {{- if .Values.grpcTLSCertsSecret }}
          - name: grpc-certs
            mountPath: /grpccerts
          {{- end }}
          {{- if .Values.hashiCorpVaultTLS }}
          - name: hashicorp-vault-certs
            mountPath: /hashicorp-vaultcerts
          {{- end }}
          {{- if .Values.volumes.metricsApiServer.extraVolumeMounts }}
          {{- toYaml .Values.volumes.metricsApiServer.extraVolumeMounts | nindent 12 }}
          {{- end }}
          resources:
            {{- if .Values.resources.metricServer }}
            {{- toYaml .Values.resources.metricServer | nindent 12 }}
            {{- else }}
            {{- toYaml .Values.resources | nindent 12 }}
            {{- end }}
      volumes:
      {{- if .Values.grpcTLSCertsSecret }}
      - name: grpc-certs
        secret:
          secretName: {{ .Values.grpcTLSCertsSecret }}
      {{- end }}
      {{- if .Values.hashiCorpVaultTLS }}
      - name: hashicorp-vault-certs
        secret:
          secretName: {{ .Values.hashiCorpVaultTLS }}
      {{- end }}
      {{- if .Values.volumes.metricsApiServer.extraVolumes }}
      {{- toYaml .Values.volumes.metricsApiServer.extraVolumes | nindent 8 }}
      {{- end }}
      dnsPolicy: {{ .Values.metricsServer.dnsPolicy }}
      hostNetwork: {{ .Values.metricsServer.useHostNetwork }}
      nodeSelector:
        kubernetes.io/os: linux
      {{- with .Values.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.metricsServer.affinity }}
      affinity:
        {{- toYaml .Values.metricsServer.affinity | nindent 8 }}
      {{- else if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints.metricsServer}}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
